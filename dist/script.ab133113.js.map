{"version":3,"sources":["Project/Nation/script.js"],"names":["selectedCountry","btn","document","getElementById","countriesContainer","querySelector","listCountry","loading","enableBtn","disabled","disableBtn","displayCountryList","countriesData","options","forEach","country","name","innerHTML","selectedIndex","fetch","fetchCountryListName","Error","json","dataCountryListName","displayError","displayCountry","className","html","flag","region","population","toFixed","languages","currencies","code","insertAdjacentHTML","text","countryInfor","fetchCountryInfor","ok","dataCountryArr","dataCountryObj","neighborsCode","borders","length","fetchCode","dataCode","addEventListener","e","target","value","finally","style","opacity"],"mappings":"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","file":"script.ab133113.js","sourceRoot":"..","sourcesContent":["\"use strict\";\r\n//*create variables\r\nlet selectedCountry;\r\nconst btn = document.getElementById(\"btn\");\r\nconst countriesContainer = document.querySelector(\".countries\");\r\nconst listCountry = document.querySelector(\".list-country\");\r\nlet loading = `<div class=\"loading\"></div>`;\r\nconst enableBtn = function () {\r\n  btn.disabled = false;\r\n};\r\nconst disableBtn = function () {\r\n  btn.disabled = true;\r\n};\r\n// *get and  choose country list\r\nconst displayCountryList = function (countriesData) {\r\n  let options = \"\";\r\n  countriesData.forEach(\r\n    (country) =>\r\n      (options += `<option value=\"${country.name}\">${country.name}</option>`)\r\n  );\r\n  listCountry.innerHTML = options;\r\n  listCountry.selectedIndex = -1;\r\n};\r\n//*IIFE to display country list\r\n(async function () {\r\n  try {\r\n    const fetchCountryListName = await fetch(\r\n      \"https://restcountries.eu/rest/v2/all?fields=name\"\r\n    );\r\n    if (!fetchCountryListName) {\r\n      throw new Error(\"Problem getting country!\");\r\n    }\r\n    const dataCountryListName = await fetchCountryListName.json();\r\n    displayCountryList(dataCountryListName);\r\n  } catch (err) {\r\n    displayError(err);\r\n  }\r\n})();\r\n// *display Ã¬nformation\r\nconst displayCountry = function (country, className = \"\") {\r\n  const html = `<article class=\"country ${className}\">\r\n    <img class=\"country__img\" src=\"${country.flag}\" />\r\n    <div class=\"country__data\">\r\n      <h3 class=\"country__name\">${country.name}</h3>\r\n      <h4 class=\"country__region\">${country.region}</h4>\r\n      <p class=\"country__row\"><span>ðŸ‘«</span>${(\r\n        +country.population / 1000000\r\n      ).toFixed(1)}tr</p>\r\n      <p class=\"country__row\"><span>ðŸ‘‚</span>${country.languages[0].name}</p>\r\n      <p class=\"country__row\"><span>ðŸ’°</span>${country.currencies[0].code}</p>\r\n    </div>\r\n  </article>`;\r\n  countriesContainer.insertAdjacentHTML(\"beforeend\", html);\r\n};\r\nconst displayError = function (text) {\r\n  countriesContainer.insertAdjacentHTML(\"beforeend\", text);\r\n};\r\n//*fetch data from rest Country\r\nconst countryInfor = async function (country) {\r\n  countriesContainer.innerHTML = loading;\r\n  try {\r\n    const fetchCountryInfor = await fetch(\r\n      `https://restcountries.eu/rest/v2/name/${country}`\r\n    );\r\n    if (!fetchCountryInfor.ok) {\r\n      throw new Error(\"Country not found\");\r\n    }\r\n    const dataCountryArr = await fetchCountryInfor.json();\r\n    const dataCountryObj = dataCountryArr[0];\r\n    countriesContainer.innerHTML = \"\";\r\n    displayCountry(dataCountryObj);\r\n    const neighborsCode = dataCountryObj.borders;\r\n    if (neighborsCode.length === 0) displayError(`${country} has no neighbor`);\r\n    neighborsCode.forEach(async function (code) {\r\n      const fetchCode = await fetch(\r\n        `https://restcountries.eu/rest/v2/alpha/${code}`\r\n      );\r\n      const dataCode = await fetchCode.json();\r\n      countriesContainer.addEventListener(\r\n        \"load\",\r\n        displayCountry(dataCode, \"neighbour\")\r\n      );\r\n    });\r\n  } catch (err) {\r\n    countriesContainer.innerHTML = \"\";\r\n    displayError(err);\r\n  }\r\n};\r\n//*fetch all data country to select\r\nlistCountry.addEventListener(\"change\", function (e) {\r\n  selectedCountry = this[e.target.selectedIndex].value;\r\n  enableBtn();\r\n});\r\nbtn.addEventListener(\"click\", function () {\r\n  disableBtn();\r\n  countryInfor(selectedCountry).finally(\r\n    () => (countriesContainer.style.opacity = 1)\r\n  );\r\n});\r\n"]}